.route-controllers
  .row.transit-start
    .col-sm-3
      = t('transit.start')
    .col-sm-9
      .input-wrapper
        if params.get_origin().is_pending() && !params.get_origin().is_detected_location()
          input.endpoint(type="text", placeholder!=t('transit.input_placeholder'), data-endpoint='origin')
        else
          .preset.preset-location(data-route-node='start', class=origin.lock === true ? 'locked' : 'unlocked')
            if origin.icon
              .icon(class!=origin.icon)
            | &nbsp;
            .endpoint-name!= origin.name
  .row.transit-end
    .col-sm-3
      = t('transit.end')
    .col-sm-9
      .input-wrapper
        if params.get_destination().is_pending() && !params.get_destination().is_detected_location()
          input.endpoint(type="text", placeholder!=t('transit.input_placeholder'), data-endpoint='destination')
        else
          .preset.preset-location(data-route-node='end', class=destination.lock === true ? 'locked' : 'unlocked')
            if destination.icon
              .icon(class!=destination.icon)
            | &nbsp;
            .endpoint-name!= destination.name
  .row.transit-time
    .col-sm-3
    .col-sm-9.nopad
      .input-wrapper
        div.time-mode.unlocked(data-value=time_mode)
          if time_mode == 'depart'
            = t('transit.depart')
          else
            = t('transit.arrive')
      if params.is_time_set() || time_mode == 'arrive'
          .input-wrapper
            input.time(type='text', value="#{time}", size=5)
          .input-wrapper
            if is_today
              span.preset.preset-current-date= t('time.today')
            else
              input.date(type='text', value="#{date}", size=10)
            // if is_tomorrow
            //   span= t('time.tomorrow')
      else
          .input-wrapper
            div.preset-current-time.unlocked
              = t('transit.now')

  a.switch-end-points(href="#")
    span.swap-endpoints.icon-icon-vice-versa
